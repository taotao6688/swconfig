heat_template_version: 2013-05-23
parameters:
  key_name:
    type: string
    default: yangbo52
  flavor:
    type: string
    default: m1.medium
  image:
    type: string
    default: rhel-tao-heat-config3
  network_id_private:
    type: string
    default: 9c743c4c-2106-403f-bd57-0cee90de32cc

resources:
  config:
    type: OS::Heat::SoftwareConfig
    properties:
    properties:
      inputs:
        - name: CHEF_SERVER
          type: String
      outputs:
        - name: result
      group: chef
      config: |
        #!/bin/bash
        cat > /tmp/solo.rb <<EOF
            file_cache_path "/var/chef/cache" 
            cookbook_path ["/var/chef/cookbooks"]
        EOF
        cat > /tmp/solo.json <<EOF
            {
            "hello": {
              "message":"chef solo!"
              },
            "run_list": ["recipe[hello_world]"]
            }
        EOF
        cd /tmp
        chef-solo -c solo.rb -j solo.json

  deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      input_values:
        CHEF_SERVER: '172.16.0.9'
      config:
        get_resource: config
      server:
        get_resource: server
  server:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: {get_param: flavor}
      key_name: {get_param: key_name}
      networks:
      - port: { get_resource: test_private_port }
      user_data_format: SOFTWARE_CONFIG
      user_data:
        get_resource: config
  test_private_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network_id_private }

outputs:
  addresses:
    value:
      get_attr: [server, addresses]
