heat_template_version: 2013-05-23
parameters:
  key_name:
    type: string
    default: heat_key
  flavor:
    type: string
    default: m1.small
  image:
    type: string
    default: fedora-amd64
resources:
  config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: chef
      config: |
        #!/bin/bash
        cd /tmp
        chef-solo -c solo.rb -j solo.json
  chef:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
        - path: /tmp/solo.rb
          content: |
            root = File.absolute_path(File.dirname(__FILE__))
            file_cache_path root
            cookbook_path File.expand_path(File.join(root, "cookbooks"))
        - path: /tmp/solo.json
          content: |
            {
            "hello": {
              "message":"chef solo!"
              },
            "run_list": ["recipe[hello_world]"]
            }
        - path: /tmp/cookbooks/hello_world/recipes/default.rb
          content: {get_file: example-chef-solo-cookbook.rb}
  init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - subtype: cloud-config
        config:
          get_resource: chef
  deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: config
      server:
        get_resource: server
  server:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: {get_param: flavor}
      key_name: {get_param: key_name}
      user_data_format: SOFTWARE_CONFIG
      user_data:
        get_resource: init
outputs:
  stdout:
    value:
      get_attr: [deployment, deploy_stdout]
  stderr:
    value:
      get_attr: [deployment, deploy_stderr]
  status_code:
    value:
      get_attr: [deployment, deploy_status_code]
